1.- Motor de Plantillas Smarty
	1.1.- Bajar Smarty
		1.1.1.- Ir a "http://www.smarty.net/download" y bajar version 3.1.30
		1.1.2.- Crear carpeta "smarty" en "C:\dev\Homestead\proyectos\plantilla_MVC\public\libs\"
		1.1.3.- Copiar carpeta "libs" bajada a carpeta antes creada
		1.1.4.- Crear directorios temporales (NOTA: Dar permisos a carpetas para escribir 777)
			1.1.4.1.- Crear directorio "tmp" (nivel application)
			1.1.4.2.- Crear directorio "tmp/cache"
			1.1.4.3.- Crear directorio "tmp/template"
		1.1.5.- Crear directorios dentro de layout/default (Ya no se tendra header y footer)
			1.1.5.1.- Crear archivo "template.tpl" (dentro de layout/default)
			1.1.5.2.- Crear directorio "configs" (dentro de layout/default)
		1.1.6.- Agregar soporte para Smarty en el sublimetext.
	1.2.- Preparar ambiente
		1.2.1.- En "Config.php" crear variable global "define('SMARTY_DIR_L', ROOT . 'libs' . DS . 'smarty' . DS .  'libs' . DS); "
		1.2.2.- En "View.php" Agregar referencias a smarty "require_once SMARTY_DIR_L . 'Smarty.class.php';"
		1.2.3.- En "View.php" extender a smarty "class View extends Smarty"
		1.2.4.- En "View.php" actualizar controlador "parent::__construct();"
	1.3.- Preparar archivo View.php
		1.3.1.- En función renderizar
			1.3.1.1.- Definir directorios temporales de smarty
				1.3.1.1.1.- Definir directorios temporales layout: 
					$this->template_dir = ROOT . 'views' . DS . 'layout' .DS . DEFAULT_LAYOUT . DS;
				1.3.1.1.2.- Definir directorios archivos de configuracion de las plantillas: 
					$this->config_dir = ROOT . 'views' . DS . 'layout' .DS . DEFAULT_LAYOUT . DS . 'configs' . DS ;
				1.3.1.1.3.- Definir directorios temporales: 
					$this->cache_dir = ROOT . 'tmp' . DS . 'cache' .DS;
				1.3.1.1.4.- Definir directorios temporales: 
					$this->compile_dir = ROOT . 'tmp' . DS . 'template' .DS;
		1.3.2.- Actualizar la rutaView: "$rutaView = ROOT . 'views' . DS . $this->_controlador . DS . $vista . '.tpl';" (en lugar de ser "phtml" es "tpl")
		1.3.3.- Cambiar 
			De
            	include_once ROOT . 'views' . DS . 'layout' . DS . DEFAULT_LAYOUT . DS . 'header.php';
				include_once $rutaView;
				include_once ROOT . 'views' . DS . 'layout' . DS . DEFAULT_LAYOUT . DS . 'footer.php';
			A
            	$this->assign('_contenido',$rutaView);
		1.3.4.- Cambiar 
			if(USAR_SMARTY == '1'){
				$_params = array(
				'ruta_css' => BASE_URL . 'views/layout/' . DEFAULT_LAYOUT . '/css/',
				'ruta_img' => BASE_URL . 'views/layout/' . DEFAULT_LAYOUT . '/img/',
				'ruta_js' => BASE_URL . 'views/layout/' . DEFAULT_LAYOUT . '/js/',
				'menu' => $menu,
				'item' => $item,
				'js' => $js,
				'root' => BASE_URL,
				'configs' => array(
					'app_name' =>APP_NAME,
					'app_slogan' => APP_SLOGAN,
					'app_company' => APP_COMPANY
			
				)
				);
			} else {
			
				$_layoutParams = array(
				'ruta_css' => BASE_URL . 'views/layout/' . DEFAULT_LAYOUT . '/css/',
				'ruta_img' => BASE_URL . 'views/layout/' . DEFAULT_LAYOUT . '/img/',
				'ruta_js' => BASE_URL . 'views/layout/' . DEFAULT_LAYOUT . '/js/',
				'menu' => $menu,
				'js' => $js
				);
			}
		1.3.5.- Asignación de parámetros
			if(USAR_SMARTY == '1'){
				$this->assign('_acl', $this->_acl);
				$this->assign('_layoutParams', $_params);
				$this->display('template.tpl');
			
			} else {
				$this->_acl = $this->_acl;     
			}
	1.4.- Adaptación de plantilla smarty template.tpl
		1.4.1.- Copiar "header.php" al template.tpl
		1.4.2.- agregar "include file=$_contenido;"
		1.4.3.- Copiar "footer.php" al template.tpl
		1.4.4.- Cambiar código a smarty
			1.4.4.1.- Cabecera:
				1.4.4.1.1.- Título
				DE
					<title><?php if(isset($this->titulo))
									echo $this->titulo;
							?>
					</title>
				A 
					<title>{$titulo|default:"Sin título"}</title>
				1.4.4.1.2.- Parametros: 
					DE
						<link href="<?php echo $_layoutParams['ruta_css']; ?>estilos.css" rel="stylesheet" type="text/css" />
					A 
						<link href="{$_layoutParams.ruta_css}estilos.css" rel="stylesheet" type="text/css" />
				1.4.4.1.3.- Parametros: 
					DE
						<script src="<?php echo BASE_URL; ?>public/js/jquery.js" type="text/javascript"></script>
					A 
						<script src="{$_layoutParams.root}public/js/jquery.js" type="text/javascript"></script>
				1.4.4.1.4.- Parametros: 
					DE
						<script src="<?php echo BASE_URL; ?>public/js/jquery.validate.js" type="text/javascript"></script>
					A 
						<script src="{$_layoutParams.ruta_css}public/js/jquery.validate.js" type="text/javascript"></script>
				1.4.4.1.5.- if: 
					DE
						<?php if(isset($_layoutParams['js']) && count($_layoutParams['js'])): ?>
							<?php for($i=0; $i < count($_layoutParams['js']); $i++): ?>
								<script src="<?php echo $_layoutParams['js'][$i] ?>" type="text/javascript"></script>
							<?php endfor;?>
						<?php endif;?>
					A 
						{if isset($_layoutParams.js) && count($_layoutParams.js)}
							{foreach item=js from=$_layoutParams.js}
								<script src="{$js}" type="text/javascript"></script>
							{/foreach}
						{/if}
			1.4.4.2.- Body:
				1.4.4.2.1.- Nombre de aplicación: 
					DE
						<h1><?php echo APP_NAME; ?></h1>
					A 
						<h1>{$_layoutParams.configs.app_name}</h1>
				1.4.4.2.2.- Los if
				1.4.4.2.3.- Los for each (NOTA: ver como asigna una variable var****)
					DE
						<?php if(isset($_layoutParams['menu'])): ?>
							<?php for($i = 0; $i < count($_layoutParams['menu']); $i++): ?>
								<?php 
									if($item && $_layoutParams['menu'][$i]['id'] == $item ){ 
										$_item_style = 'current'; 
									} else {
										$_item_style = '';
									}
								?>
								<li><a class="<?php echo $_item_style; ?>" href="<?php echo $_layoutParams['menu'][$i]['enlace']; ?>"><?php  echo $_layoutParams['menu'][$i]['titulo']; ?></a></li>
							<?php endfor; ?>
						<?php endif; ?>
					A 
						{if isset($_layoutParams.menu)}
							{foreach item=it from=$_layoutParams.menu}
								{if isset($_layoutParams.item) && $_layoutParams.item == $it.id}
									{assign var="_item_style" value='current'}  
								{else}
									{assign var="_item_style" value=''}
									
								{/if}
								<li><a class="{$_item_style}" href="{$it.enlace}">{$it.titulo}</a></li>
							{/foreach}
						{/if}
	1.5.- Adaptación indexController
		1.5.1.- Actualizar forma de enviar parámetros a vista (NOTA: Se usa método assign)
			DE
				$this->_view->titulo='Portada';
			A 
				$this->_view->assign('titulo', 'Portada');
		1.5.2.- Adaptación de vistas a código smarty
			1.5.2.1.- Crear archivo index.tpl
	1.6.- Adaptación postController
		1.6.1.- Actualizar forma de enviar parámetros a vista (NOTA: Se usa método assign)
			DE
				$this->_view->titulo='Portada';
			A 
				$this->_view->assign('titulo', 'Portada');
		1.6.2.- Adaptación de vistas a código smarty
			1.6.2.1.- Crear archivo "index.tpl" y copiar contenido de "index.htpl"
			1.6.2.2.- Actualizar código a smarty
			
    			
					
					